// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RecruitXpress_BE.Models;

#nullable disable

namespace RecruitXpress_BE.Migrations
{
    [DbContext(typeof(RecruitXpressContext))]
    partial class RecruitXpressContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RecruitXpress_BE.Models.AccessCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ExamCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ExpirationTimestamp")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("AccessCodes");
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AccountID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountId"), 1L, 1);

                    b.Property<string>("Account1")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Account");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Password")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Token")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("AccountId");

                    b.HasIndex("RoleId");

                    b.ToTable("Account", (string)null);
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.CandidateCv", b =>
                {
                    b.Property<int>("TemplateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TemplateID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TemplateId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("AccountID");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("URL");

                    b.HasKey("TemplateId")
                        .HasName("PK__CVTempla__F87ADD070A716C45");

                    b.HasIndex("AccountId");

                    b.ToTable("CandidateCV", (string)null);
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.ComputerProficiency", b =>
                {
                    b.Property<int>("ComputerProficiencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ComputerProficiencyID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComputerProficiencyId"), 1L, 1);

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ExperienceYears")
                        .HasColumnType("int");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileID");

                    b.Property<string>("SkillLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TechnicalSkills")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ComputerProficiencyId");

                    b.HasIndex("ProfileId");

                    b.ToTable("ComputerProficiency", (string)null);
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.Cvtemplate", b =>
                {
                    b.Property<int>("CvtemplateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CVTemplateID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CvtemplateId"), 1L, 1);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Thumbnail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CvtemplateId");

                    b.HasIndex("CreatedBy");

                    b.ToTable("CVTemplate", (string)null);
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.EducationalBackground", b =>
                {
                    b.Property<int>("EducationalBackgroundId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EducationalBackgroundID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EducationalBackgroundId"), 1L, 1);

                    b.Property<string>("Awards")
                        .HasColumnType("text");

                    b.Property<string>("Certifications")
                        .HasColumnType("text");

                    b.Property<string>("DegreeEarned")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EducationalLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldOfStudy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Gpa")
                        .HasColumnType("float")
                        .HasColumnName("GPA");

                    b.Property<string>("InstitutionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileID");

                    b.Property<string>("ResearchProjects")
                        .HasColumnType("text");

                    b.Property<string>("Time")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EducationalBackgroundId");

                    b.HasIndex("ProfileId");

                    b.ToTable("EducationalBackground", (string)null);
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.EmailTemplate", b =>
                {
                    b.Property<int>("TemplateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TemplateID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TemplateId"), 1L, 1);

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Header")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MailType")
                        .HasColumnType("int");

                    b.Property<string>("SendTo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TemplateId")
                        .HasName("PK__EmailTem__F87ADD070824A102");

                    b.ToTable("EmailTemplate", (string)null);
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.EmailToken", b =>
                {
                    b.Property<int>("TokenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TokenId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsRevoked")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IssuedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Token")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("TokenId")
                        .HasName("PK__EmailTok__658FEEEA6548AD56");

                    b.HasIndex("AccountId");

                    b.ToTable("EmailToken", (string)null);
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.Evaluate", b =>
                {
                    b.Property<int>("EvaluateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EvaluateId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EvaluatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EvaluaterAccountId")
                        .HasColumnType("int");

                    b.Property<string>("EvaluaterEmailContact")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("EvaluaterPhoneContact")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("Mark")
                        .HasColumnType("float");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("EvaluateId");

                    b.HasIndex("ProfileId");

                    b.ToTable("Evaluate", (string)null);
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.Exam", b =>
                {
                    b.Property<int>("ExamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ExamID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("AccountID");

                    b.Property<string>("Comment")
                        .HasColumnType("ntext");

                    b.Property<string>("FileUrl")
                        .HasColumnType("ntext")
                        .HasColumnName("FileURL");

                    b.Property<string>("MarkedBy")
                        .HasColumnType("ntext");

                    b.Property<DateTime?>("MarkedDate")
                        .HasColumnType("date");

                    b.Property<string>("Point")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("SpecializedExamId")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TestDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("TestTime")
                        .HasColumnType("date");

                    b.HasKey("ExamId");

                    b.HasIndex("AccountId");

                    b.HasIndex("SpecializedExamId");

                    b.ToTable("Exam", (string)null);
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.FamilyInformation", b =>
                {
                    b.Property<int>("FamilyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FamilyID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FamilyId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime?>("Birthdays")
                        .HasColumnType("date");

                    b.Property<string>("ContactNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EducationLevel")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FamilyName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileID");

                    b.Property<string>("RelationshipStatus")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("FamilyId")
                        .HasName("PK__FamilyIn__41D82F4B191BA3E1");

                    b.HasIndex("ProfileId");

                    b.ToTable("FamilyInformation", (string)null);
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.GeneralTest", b =>
                {
                    b.Property<int>("GeneralTestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GeneralTestID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GeneralTestId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileID");

                    b.Property<int?>("Score")
                        .HasColumnType("int");

                    b.Property<string>("TestName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GeneralTestId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ProfileId");

                    b.ToTable("GeneralTest", (string)null);
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.GeneralTestDetail", b =>
                {
                    b.Property<int>("DetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DetailID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetailId"), 1L, 1);

                    b.Property<int?>("Answer")
                        .HasColumnType("int");

                    b.Property<int?>("GeneralTestId")
                        .HasColumnType("int")
                        .HasColumnName("GeneralTestID");

                    b.Property<int?>("Point")
                        .HasColumnType("int");

                    b.Property<int?>("QuestionId")
                        .HasColumnType("int")
                        .HasColumnName("QuestionID");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("DetailId")
                        .HasName("PK__GeneralT__135C314D621B7001");

                    b.HasIndex("Answer");

                    b.HasIndex("GeneralTestId");

                    b.ToTable("GeneralTestDetail", (string)null);
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.Interviewer", b =>
                {
                    b.Property<int>("InterviewerId")
                        .HasColumnType("int");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("InterviewerId", "ScheduleId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("Interviewer", (string)null);
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.JobApplication", b =>
                {
                    b.Property<int>("ApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ApplicationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApplicationId"), 1L, 1);

                    b.Property<int?>("AssignedFor")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("JobId")
                        .HasColumnType("int")
                        .HasColumnName("JobID");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileID");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("TemplateId")
                        .HasColumnType("int")
                        .HasColumnName("TemplateID");

                    b.HasKey("ApplicationId")
                        .HasName("PK__JobAppli__C93A4F79B26EEE6F");

                    b.HasIndex("JobId");

                    b.HasIndex("ProfileId");

                    b.HasIndex("TemplateId");

                    b.ToTable("JobApplication", (string)null);
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.JobPosting", b =>
                {
                    b.Property<int>("JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("JobID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobId"), 1L, 1);

                    b.Property<DateTime?>("ApplicationDeadline")
                        .HasColumnType("date");

                    b.Property<string>("ApplicationInstructions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ContactPerson")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("DatePosted")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmploymentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Industry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("MaxSalary")
                        .HasColumnType("bigint");

                    b.Property<long?>("MinSalary")
                        .HasColumnType("bigint");

                    b.Property<string>("Requirements")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("JobId")
                        .HasName("PK__JobPosti__056690E27DD35E85");

                    b.ToTable("JobPosting", (string)null);
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.LanguageProficiency", b =>
                {
                    b.Property<int>("LanguageProficiencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LanguageProficiencyID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LanguageProficiencyId"), 1L, 1);

                    b.Property<string>("Certifications")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageExperiences")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProficiencyLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileID");

                    b.Property<string>("TestScores")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LanguageProficiencyId");

                    b.HasIndex("ProfileId");

                    b.ToTable("LanguageProficiency", (string)null);
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.MaritalStatus", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatusId")
                        .HasName("PK__MaritalS__C8EE20431005001E");

                    b.ToTable("MaritalStatus", (string)null);
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("NotificationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"), 1L, 1);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReceiverId")
                        .HasColumnType("int")
                        .HasColumnName("ReceiverID");

                    b.Property<bool?>("Seen")
                        .HasColumnType("bit");

                    b.Property<int?>("SenderId")
                        .HasColumnType("int")
                        .HasColumnName("SenderID");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TargetUrl")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("TargetURL");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NotificationId");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("Notification", (string)null);
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.Option", b =>
                {
                    b.Property<int>("OptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OptionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OptionId"), 1L, 1);

                    b.Property<bool?>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<string>("OptionText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("QuestionId")
                        .HasColumnType("int")
                        .HasColumnName("QuestionID");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("OptionId");

                    b.HasIndex("QuestionId");

                    b.ToTable("Option", (string)null);
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.Profile", b =>
                {
                    b.Property<int>("ProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProfileID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProfileId"), 1L, 1);

                    b.Property<string>("Accomplishment")
                        .HasColumnType("text");

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("AccountID");

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Article")
                        .HasColumnType("text");

                    b.Property<string>("Avatar")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Imperfection")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ResearchWork")
                        .HasColumnType("text");

                    b.Property<string>("Skills")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<string>("Strength")
                        .HasColumnType("text");

                    b.HasKey("ProfileId");

                    b.HasIndex("AccountId");

                    b.HasIndex("StatusId");

                    b.ToTable("Profile", (string)null);
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.Question", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("QuestionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuestionId"), 1L, 1);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Question1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Question");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("QuestionId");

                    b.HasIndex("CreatedBy");

                    b.ToTable("Question", (string)null);
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.ReferenceChecking", b =>
                {
                    b.Property<int>("ReferenceCheckingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReferenceCheckingId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("date");

                    b.Property<int?>("NameOf")
                        .HasColumnType("int");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("ReferenceCheckingId");

                    b.HasIndex("ProfileId");

                    b.ToTable("ReferenceChecking", (string)null);
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("RoleId");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.Schedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleId"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("HumanResourceId")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime");

                    b.HasKey("ScheduleId");

                    b.HasIndex("HumanResourceId");

                    b.ToTable("Schedule", (string)null);
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.ScheduleDetail", b =>
                {
                    b.Property<int>("ScheduleDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleDetailId"), 1L, 1);

                    b.Property<int?>("CandidateId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Note")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<int?>("ScheduleType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime");

                    b.HasKey("ScheduleDetailId");

                    b.HasIndex("CandidateId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("ScheduleDetail", (string)null);
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.ShortListing", b =>
                {
                    b.Property<int>("ListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ListId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("date");

                    b.Property<int?>("JobId")
                        .HasColumnType("int");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("ListId")
                        .HasName("PK__ShortLis__E3832805B6BF7C24");

                    b.HasIndex("JobId");

                    b.HasIndex("ProfileId");

                    b.ToTable("ShortListing", (string)null);
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.SpecializedExam", b =>
                {
                    b.Property<int>("ExamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamId"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ExamName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ExpertEmail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("ExamId")
                        .HasName("PK__Speciali__297521C76A3469C5");

                    b.HasIndex("CreatedBy");

                    b.ToTable("SpecializedExam", (string)null);
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.training", b =>
                {
                    b.Property<int>("TrainingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TrainingID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrainingId"), 1L, 1);

                    b.Property<string>("CertificationOffered")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Duration")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("FormatName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Language")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Location")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileID");

                    b.Property<string>("SkillsCovered")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("TrainingId");

                    b.HasIndex("ProfileId");

                    b.ToTable("Training", (string)null);
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.UserAnalytic", b =>
                {
                    b.Property<int>("AnalyticId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AnalyticID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnalyticId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Data")
                        .HasColumnType("ntext");

                    b.Property<string>("Type")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("AnalyticId")
                        .HasName("PK__UserAnal__4C99FBC383CF1626");

                    b.ToTable("UserAnalytics");
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.WishList", b =>
                {
                    b.Property<int>("WishlistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WishlistID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WishlistId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("AccountID");

                    b.Property<int?>("JobId")
                        .HasColumnType("int")
                        .HasColumnName("JobID");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("WishlistId");

                    b.HasIndex("AccountId");

                    b.HasIndex("JobId");

                    b.ToTable("WishList", (string)null);
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.WorkExperience", b =>
                {
                    b.Property<int>("WorkExperienceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WorkExperienceID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkExperienceId"), 1L, 1);

                    b.Property<string>("Achievements")
                        .HasColumnType("text");

                    b.Property<string>("Company")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("EmploymentType")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("JobTitle")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Location")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileID");

                    b.Property<string>("Responsibilities")
                        .HasColumnType("text");

                    b.Property<string>("SkillsUsed")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("WorkExperienceId");

                    b.HasIndex("ProfileId");

                    b.ToTable("WorkExperience", (string)null);
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.Account", b =>
                {
                    b.HasOne("RecruitXpress_BE.Models.Role", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK__Account__RoleID__38996AB5");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.CandidateCv", b =>
                {
                    b.HasOne("RecruitXpress_BE.Models.Account", "Account")
                        .WithMany("CandidateCvs")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK__CVTemplat__Accou__4AB81AF0");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.ComputerProficiency", b =>
                {
                    b.HasOne("RecruitXpress_BE.Models.Profile", "Profile")
                        .WithMany("ComputerProficiencies")
                        .HasForeignKey("ProfileId")
                        .HasConstraintName("FK__ComputerP__Profi__1332DBDC");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.Cvtemplate", b =>
                {
                    b.HasOne("RecruitXpress_BE.Models.Account", "CreatedByNavigation")
                        .WithMany("Cvtemplates")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK_CVTemplate_Account");

                    b.Navigation("CreatedByNavigation");
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.EducationalBackground", b =>
                {
                    b.HasOne("RecruitXpress_BE.Models.Profile", "Profile")
                        .WithMany("EducationalBackgrounds")
                        .HasForeignKey("ProfileId")
                        .HasConstraintName("FK__Education__Profi__7F2BE32F");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.EmailToken", b =>
                {
                    b.HasOne("RecruitXpress_BE.Models.Account", "Account")
                        .WithMany("EmailTokens")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK__EmailToke__Accou__681373AD");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.Evaluate", b =>
                {
                    b.HasOne("RecruitXpress_BE.Models.Profile", "Profile")
                        .WithMany("Evaluates")
                        .HasForeignKey("ProfileId")
                        .IsRequired()
                        .HasConstraintName("FK__Evaluate__Profil__41B8C09B");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.Exam", b =>
                {
                    b.HasOne("RecruitXpress_BE.Models.Account", "Account")
                        .WithMany("Exams")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK__Exam__AccountID__76969D2E");

                    b.HasOne("RecruitXpress_BE.Models.SpecializedExam", "SpecializedExam")
                        .WithMany("Exams")
                        .HasForeignKey("SpecializedExamId")
                        .HasConstraintName("FK_Exam_SpecializedExam");

                    b.Navigation("Account");

                    b.Navigation("SpecializedExam");
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.FamilyInformation", b =>
                {
                    b.HasOne("RecruitXpress_BE.Models.Profile", "Profile")
                        .WithMany("FamilyInformations")
                        .HasForeignKey("ProfileId")
                        .HasConstraintName("FK__FamilyInf__Profi__1DB06A4F");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.GeneralTest", b =>
                {
                    b.HasOne("RecruitXpress_BE.Models.Account", "CreatedByNavigation")
                        .WithMany("GeneralTests")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK_GeneralTest_Account");

                    b.HasOne("RecruitXpress_BE.Models.Profile", "Profile")
                        .WithMany("GeneralTests")
                        .HasForeignKey("ProfileId")
                        .HasConstraintName("FK_GeneralTest_Profile");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.GeneralTestDetail", b =>
                {
                    b.HasOne("RecruitXpress_BE.Models.Option", "AnswerNavigation")
                        .WithMany("GeneralTestDetails")
                        .HasForeignKey("Answer")
                        .HasConstraintName("FK_GeneralTestDetail_Option");

                    b.HasOne("RecruitXpress_BE.Models.GeneralTest", "GeneralTest")
                        .WithMany("GeneralTestDetails")
                        .HasForeignKey("GeneralTestId")
                        .HasConstraintName("FK__GeneralTe__Gener__5AEE82B9");

                    b.Navigation("AnswerNavigation");

                    b.Navigation("GeneralTest");
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.Interviewer", b =>
                {
                    b.HasOne("RecruitXpress_BE.Models.Profile", "InterviewerNavigation")
                        .WithMany("Interviewers")
                        .HasForeignKey("InterviewerId")
                        .IsRequired()
                        .HasConstraintName("FK_Interviewer_Profile");

                    b.HasOne("RecruitXpress_BE.Models.Schedule", "Schedule")
                        .WithMany("Interviewers")
                        .HasForeignKey("ScheduleId")
                        .IsRequired()
                        .HasConstraintName("FK_Interviewer_Schedule");

                    b.Navigation("InterviewerNavigation");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.JobApplication", b =>
                {
                    b.HasOne("RecruitXpress_BE.Models.JobPosting", "Job")
                        .WithMany("JobApplications")
                        .HasForeignKey("JobId")
                        .HasConstraintName("FK__JobApplic__JobID__0B91BA14");

                    b.HasOne("RecruitXpress_BE.Models.Profile", "Profile")
                        .WithMany("JobApplications")
                        .HasForeignKey("ProfileId")
                        .HasConstraintName("FK__JobApplic__Profi__0C85DE4D");

                    b.HasOne("RecruitXpress_BE.Models.CandidateCv", "Template")
                        .WithMany("JobApplications")
                        .HasForeignKey("TemplateId")
                        .HasConstraintName("FK__JobApplic__Templ__0D7A0286");

                    b.Navigation("Job");

                    b.Navigation("Profile");

                    b.Navigation("Template");
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.LanguageProficiency", b =>
                {
                    b.HasOne("RecruitXpress_BE.Models.Profile", "Profile")
                        .WithMany("LanguageProficiencies")
                        .HasForeignKey("ProfileId")
                        .HasConstraintName("FK__LanguageP__Profi__10566F31");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.Notification", b =>
                {
                    b.HasOne("RecruitXpress_BE.Models.Account", "Receiver")
                        .WithMany("NotificationReceivers")
                        .HasForeignKey("ReceiverId")
                        .HasConstraintName("FK__Notificat__Recei__60A75C0F");

                    b.HasOne("RecruitXpress_BE.Models.Account", "Sender")
                        .WithMany("NotificationSenders")
                        .HasForeignKey("SenderId")
                        .HasConstraintName("FK__Notificat__Sende__5FB337D6");

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.Option", b =>
                {
                    b.HasOne("RecruitXpress_BE.Models.Question", "Question")
                        .WithMany("Options")
                        .HasForeignKey("QuestionId")
                        .HasConstraintName("FK_Option_Question");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.Profile", b =>
                {
                    b.HasOne("RecruitXpress_BE.Models.Account", "Account")
                        .WithMany("Profiles")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK__Profile__Account__7B5B524B");

                    b.HasOne("RecruitXpress_BE.Models.MaritalStatus", "Status")
                        .WithMany("Profiles")
                        .HasForeignKey("StatusId")
                        .HasConstraintName("FK__Profile__StatusI__7C4F7684");

                    b.Navigation("Account");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.Question", b =>
                {
                    b.HasOne("RecruitXpress_BE.Models.Account", "CreatedByNavigation")
                        .WithMany("Questions")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK_Question_Account");

                    b.Navigation("CreatedByNavigation");
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.ReferenceChecking", b =>
                {
                    b.HasOne("RecruitXpress_BE.Models.Profile", "Profile")
                        .WithMany("ReferenceCheckings")
                        .HasForeignKey("ProfileId")
                        .HasConstraintName("FK__Reference__Profi__37FA4C37");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.Schedule", b =>
                {
                    b.HasOne("RecruitXpress_BE.Models.Profile", "HumanResource")
                        .WithMany("Schedules")
                        .HasForeignKey("HumanResourceId")
                        .HasConstraintName("FK_Schedule_Profile");

                    b.Navigation("HumanResource");
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.ScheduleDetail", b =>
                {
                    b.HasOne("RecruitXpress_BE.Models.JobApplication", "Candidate")
                        .WithMany("ScheduleDetails")
                        .HasForeignKey("CandidateId")
                        .HasConstraintName("FK_ScheduleDetail_JobApplication");

                    b.HasOne("RecruitXpress_BE.Models.Schedule", "Schedule")
                        .WithMany("ScheduleDetails")
                        .HasForeignKey("ScheduleId")
                        .HasConstraintName("FK_ScheduleDetail_Schedule");

                    b.Navigation("Candidate");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.ShortListing", b =>
                {
                    b.HasOne("RecruitXpress_BE.Models.JobPosting", "Job")
                        .WithMany("ShortListings")
                        .HasForeignKey("JobId")
                        .HasConstraintName("FK__ShortList__JobId__351DDF8C");

                    b.HasOne("RecruitXpress_BE.Models.Profile", "Profile")
                        .WithMany("ShortListings")
                        .HasForeignKey("ProfileId")
                        .HasConstraintName("FK__ShortList__Profi__3429BB53");

                    b.Navigation("Job");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.SpecializedExam", b =>
                {
                    b.HasOne("RecruitXpress_BE.Models.Account", "CreatedByNavigation")
                        .WithMany("SpecializedExams")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK_SpecializedExam_Account");

                    b.Navigation("CreatedByNavigation");
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.training", b =>
                {
                    b.HasOne("RecruitXpress_BE.Models.Profile", "Profile")
                        .WithMany("training")
                        .HasForeignKey("ProfileId")
                        .HasConstraintName("FK__Training__Profil__208CD6FA");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.WishList", b =>
                {
                    b.HasOne("RecruitXpress_BE.Models.Account", "Account")
                        .WithMany("WishLists")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK__WishList__Accoun__6383C8BA");

                    b.HasOne("RecruitXpress_BE.Models.JobPosting", "Job")
                        .WithMany("WishLists")
                        .HasForeignKey("JobId")
                        .HasConstraintName("FK__WishList__JobID__6477ECF3");

                    b.Navigation("Account");

                    b.Navigation("Job");
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.WorkExperience", b =>
                {
                    b.HasOne("RecruitXpress_BE.Models.Profile", "Profile")
                        .WithMany("WorkExperiences")
                        .HasForeignKey("ProfileId")
                        .HasConstraintName("FK__WorkExper__Profi__02084FDA");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.Account", b =>
                {
                    b.Navigation("CandidateCvs");

                    b.Navigation("Cvtemplates");

                    b.Navigation("EmailTokens");

                    b.Navigation("Exams");

                    b.Navigation("GeneralTests");

                    b.Navigation("NotificationReceivers");

                    b.Navigation("NotificationSenders");

                    b.Navigation("Profiles");

                    b.Navigation("Questions");

                    b.Navigation("SpecializedExams");

                    b.Navigation("WishLists");
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.CandidateCv", b =>
                {
                    b.Navigation("JobApplications");
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.GeneralTest", b =>
                {
                    b.Navigation("GeneralTestDetails");
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.JobApplication", b =>
                {
                    b.Navigation("ScheduleDetails");
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.JobPosting", b =>
                {
                    b.Navigation("JobApplications");

                    b.Navigation("ShortListings");

                    b.Navigation("WishLists");
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.MaritalStatus", b =>
                {
                    b.Navigation("Profiles");
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.Option", b =>
                {
                    b.Navigation("GeneralTestDetails");
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.Profile", b =>
                {
                    b.Navigation("ComputerProficiencies");

                    b.Navigation("EducationalBackgrounds");

                    b.Navigation("Evaluates");

                    b.Navigation("FamilyInformations");

                    b.Navigation("GeneralTests");

                    b.Navigation("Interviewers");

                    b.Navigation("JobApplications");

                    b.Navigation("LanguageProficiencies");

                    b.Navigation("ReferenceCheckings");

                    b.Navigation("Schedules");

                    b.Navigation("ShortListings");

                    b.Navigation("WorkExperiences");

                    b.Navigation("training");
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.Question", b =>
                {
                    b.Navigation("Options");
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.Role", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.Schedule", b =>
                {
                    b.Navigation("Interviewers");

                    b.Navigation("ScheduleDetails");
                });

            modelBuilder.Entity("RecruitXpress_BE.Models.SpecializedExam", b =>
                {
                    b.Navigation("Exams");
                });
#pragma warning restore 612, 618
        }
    }
}
